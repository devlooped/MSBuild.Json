<Project>

  <UsingTask TaskName="Error" AssemblyName="Microsoft.Build.Tasks.Core, PublicKeyToken=b03f5f7f11d50a3a" />
  <UsingTask TaskName="Message" AssemblyName="Microsoft.Build.Tasks.Core, PublicKeyToken=b03f5f7f11d50a3a" />
  <UsingTask AssemblyFile="JsonPoke.dll" TaskName="JsonPoke"/>
  <UsingTask AssemblyFile="JsonPeek.dll" TaskName="JsonPeek"/>

  <Target Name="NoFileNorContent" Label="Error:JPO01">
    <JsonPoke Query="$.hello" />
  </Target>

  <Target Name="FileNotFound" Label="Error:JPO02">
    <JsonPoke ContentPath="Foo.json" Query="$.hello" />
  </Target>

  <Target Name="FileAndContent" Label="Error:JPO03">
    <JsonPoke Content="{ }" ContentPath="empty.json" Query="$.hello" />
  </Target>

  <Target Name="EmptyJson" Label="Error:JPO04">
    <JsonPoke ContentPath="empty.json" Query="$.hello" />
  </Target>

  <Target Name="NoValue" Label="Warning:JPO05">
    <JsonPoke ContentPath="sample.json" Query="$.hello" />
  </Target>

  <Target Name="ValueAndRawValue" Label="Error:JPO06">
    <JsonPoke ContentPath="sample.json" Query="$.hello" Value="foo" RawValue="bar" />
  </Target>

  <Target Name="PokeContent">
    <PropertyGroup>
      <Query>$.hello</Query>
      <Expected>goodbye</Expected>
    </PropertyGroup>

    <JsonPoke Content='{ "hello": "world" }' Query="$(Query)" Value="$(Expected)" >
      <Output TaskParameter="Content" PropertyName="Content" />
      <Output TaskParameter="Result" PropertyName="Actual" />
    </JsonPoke>

    <JsonPeek Content="$(Content)" Query="$(Query)">
      <Output TaskParameter="Result" PropertyName="Actual" />
    </JsonPeek>

    <Error Condition="'$(Expected)' != '$(Actual)'" Text="Expected $(Expected) but was $(Actual)" />
    <Message Importance="high" Text="$(Content)" />
  </Target>

  <Target Name="PokeSimpleValue">
    <PropertyGroup>
      <Query>$.hello</Query>
      <Expected>goodbye</Expected>
    </PropertyGroup>
    
    <JsonPeek ContentPath="sample.json" Query="$(Query)">
      <Output TaskParameter="Result" PropertyName="Actual" />
    </JsonPeek>
    
    <Error Condition="'$(Expected)' == '$(Actual)'" Text="Did not expect $(Expected) for $(Query)" />

    <JsonPoke ContentPath="sample.json" Query="$(Query)" Value="$(Expected)" />
    
    <JsonPeek ContentPath="sample.json" Query="$(Query)">
      <Output TaskParameter="Result" PropertyName="Actual" />
    </JsonPeek>
    
    <Error Condition="'$(Expected)' != '$(Actual)'" Text="Expected $(Expected) but was $(Actual)" />
  </Target>

  <Target Name="PokeBoolean">
    <PropertyGroup>
      <Query>$.enabled</Query>
      <Expected>false</Expected>
    </PropertyGroup>
    
    <JsonPoke ContentPath="sample.json" Query="$(Query)" Value="$(Expected)" />
    
    <JsonPeek ContentPath="sample.json" Query="$(Query)">
      <Output TaskParameter="Result" PropertyName="Actual" />
    </JsonPeek>
    
    <Error Condition="'$(Expected)' != '$(Actual)'" Text="Expected $(Expected) but was $(Actual)" />
  </Target>

  <Target Name="PokeInteger">
    <PropertyGroup>
      <Query>$.count</Query>
      <Expected>42</Expected>
    </PropertyGroup>
    
    <JsonPoke ContentPath="sample.json" Query="$(Query)" Value="$(Expected)" />
    
    <JsonPeek ContentPath="sample.json" Query="$(Query)">
      <Output TaskParameter="Result" PropertyName="Actual" />
    </JsonPeek>
    
    <Error Condition="'$(Expected)' != '$(Actual)'" Text="Expected $(Expected) but was $(Actual)" />
  </Target>

  <Target Name="PokeDecimal">
    <PropertyGroup>
      <Query>$.decimal</Query>
      <Expected>42.42</Expected>
    </PropertyGroup>
    
    <JsonPoke ContentPath="sample.json" Query="$(Query)" Value="$(Expected)" />
    
    <JsonPeek ContentPath="sample.json" Query="$(Query)">
      <Output TaskParameter="Result" PropertyName="Actual" />
    </JsonPeek>
    
    <Error Condition="'$(Expected)' != '$(Actual)'" Text="Expected $(Expected) but was $(Actual)" />
  </Target>
  
  <Target Name="PokeArray">
    <PropertyGroup>
      <Query>$.values</Query>
      <Expected>9;8;7</Expected>
    </PropertyGroup>

    <ItemGroup>
      <Value Include="$(Expected)" />
    </ItemGroup>
    
    <Error Condition="'@(Value -> Count())' != 3" Text="Expected 3 Value items" />

    <JsonPoke ContentPath="sample.json" Query="$(Query)" Value="@(Value)" />
    
    <JsonPeek ContentPath="sample.json" Query="$(Query)">
      <Output TaskParameter="Result" PropertyName="Actual" />
    </JsonPeek>
    
    <Error Condition="'$(Expected)' != '$(Actual)'" Text="Expected $(Expected) but was $(Actual)" />
  </Target>

  <Target Name="PokeArrayItem">
    <PropertyGroup>
      <Query>$.values[0]</Query>
      <Expected>42</Expected>
    </PropertyGroup>

    <JsonPoke ContentPath="sample.json" Query="$(Query)" Value="$(Expected)" />

    <JsonPeek ContentPath="sample.json" Query="$(Query)">
      <Output TaskParameter="Result" PropertyName="Actual" />
    </JsonPeek>

    <Error Condition="'$(Expected)' != '$(Actual)'" Text="Expected $(Expected) but was $(Actual)" />
  </Target>

  <Target Name="PokeStringArray">
    <PropertyGroup>
      <Query>$.strings</Query>
      <Expected>4;5;6</Expected>
    </PropertyGroup>

    <ItemGroup>
      <!-- Force values to be written as strings -->
      <Value Include="'4';'5';'6'" />
    </ItemGroup>
    
    <Error Condition="'@(Value -> Count())' != 3" Text="Expected 3 Value items" />

    <JsonPoke ContentPath="sample.json" Query="$(Query)" Value="@(Value)" />
    
    <JsonPeek ContentPath="sample.json" Query="$(Query)">
      <Output TaskParameter="Result" PropertyName="Actual" />
    </JsonPeek>
    
    <Error Condition="'$(Expected)' != '$(Actual)'" Text="Expected $(Expected) but was $(Actual)" />
  </Target>

  <Target Name="PokeStringArray2">
    <PropertyGroup>
      <Expected>{
  "ports": [
    "8080",
    "1080"
  ]
}</Expected> 
    </PropertyGroup>
    
    <ItemGroup>
      <HttpPort Include="'8080'" />
      <HttpPort Include="'1080'" />
    </ItemGroup>

    <JsonPoke ContentPath="sample.json" Query="$.http.ports" Value="@(HttpPort)">
      <Output TaskParameter="Result" ItemName="HttpPorts" />
    </JsonPoke>

    <JsonPeek ContentPath="sample.json" Query="$.http">
      <Output TaskParameter="Result" PropertyName="Actual" />
    </JsonPeek>
    
    <Error Condition="'$(Expected)' != '$(Actual)'" Text="Expected $(Expected) but was $(Actual)" />
  </Target>

  <Target Name="PokeObject">
    <PropertyGroup>
      <Query>$.object.name</Query>
      <Expected>foo</Expected>
    </PropertyGroup>

    <JsonPoke ContentPath="sample.json" Query="$(Query)" Value="$(Expected)">
      <Output TaskParameter="Result" ItemName="JObject" />
    </JsonPoke>
    
    <JsonPeek ContentPath="sample.json" Query="$(Query)">
      <Output TaskParameter="Result" PropertyName="Actual" />
    </JsonPeek>
    
    <Error Condition="'$(Expected)' != '$(Actual)'" Text="Expected $(Expected) but was $(Actual)" />
  </Target>

  <Target Name="PokeObjectCreatesHierarchy">
    <PropertyGroup>
      <Query>$.foo.bar.baz</Query>
      <Expected>yay</Expected>
    </PropertyGroup>

    <JsonPoke ContentPath="sample.json" Query="$(Query)" Value="$(Expected)">
      <Output TaskParameter="Result" ItemName="JObject" />
    </JsonPoke>

    <JsonPeek ContentPath="sample.json" Query="$(Query)">
      <Output TaskParameter="Result" PropertyName="Actual" />
    </JsonPeek>

    <Error Condition="'$(Expected)' != '$(Actual)'" Text="Expected $(Expected) but was $(Actual)" />
  </Target>

  <Target Name="PokeArrayCreatesHierarchy">
    <PropertyGroup>
      <Query>$.baz[0].bar[0].foo</Query>
      <Expected>yay</Expected>
    </PropertyGroup>

    <JsonPoke ContentPath="sample.json" Query="$(Query)" Value="$(Expected)">
      <Output TaskParameter="Result" ItemName="JObject" />
    </JsonPoke>

    <JsonPeek ContentPath="sample.json" Query="$(Query)">
      <Output TaskParameter="Result" PropertyName="Actual" />
    </JsonPeek>

    <Error Condition="'$(Expected)' != '$(Actual)'" Text="Expected $(Expected) but was $(Actual)" />
  </Target>

  <Target Name="PokeObjectValue">
    <PropertyGroup>
      <Query>$.object</Query>
      <Expected>{
  "name": "foo",
  "age": 25
}</Expected>
    </PropertyGroup>
    
    <ItemGroup>
      <Value Include="value">
        <name>foo</name>
        <age>25</age>
      </Value>
    </ItemGroup>

    <JsonPoke ContentPath="sample.json" Query="$(Query)" Value="@(Value)" Properties="name;age" />
    
    <JsonPeek ContentPath="sample.json" Query="$(Query)">
      <Output TaskParameter="Result" PropertyName="Actual" />
    </JsonPeek>
    
    <Error Condition="'$(Expected)' != '$(Actual)'" Text="Expected $(Expected) but was $(Actual)" />
  </Target>

  <Target Name="PokeMultipleValues">
    <PropertyGroup>
      <Query>$.routes.*.anonymous</Query>
    </PropertyGroup>

    <JsonPoke ContentPath="sample.json" Query="$(Query)" Value="false">
      <Output TaskParameter="Result" ItemName="Changed" />
    </JsonPoke>
  </Target>

  <Target Name="PokeContentJsonProperty">

    <PropertyGroup>
      <Json>
{
  "http": {
    "host": "localhost",
    "port": 80,
    "ssl": true
  }
}
      </Json>
    </PropertyGroup>

    <JsonPoke Content="$(Json)" Query="$.http.host" Value="example.com">
      <Output TaskParameter="Content" PropertyName="Json" />
    </JsonPoke>

    <JsonPoke Content="$(Json)" Query="$.http.port" Value="80">
      <Output TaskParameter="Content" PropertyName="Json" />
    </JsonPoke>

    <JsonPoke Content="$(Json)" Query="$.http.ssl" Value="true">
      <Output TaskParameter="Content" PropertyName="Json" />
    </JsonPoke>

    <Message Importance="high" Text="$(Json)" />
  </Target>

</Project>