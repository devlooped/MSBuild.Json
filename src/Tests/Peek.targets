<Project>

  <UsingTask TaskName="Error" AssemblyName="Microsoft.Build.Tasks.Core, PublicKeyToken=b03f5f7f11d50a3a" />
  <UsingTask TaskName="Message" AssemblyName="Microsoft.Build.Tasks.Core, PublicKeyToken=b03f5f7f11d50a3a" />
  <UsingTask AssemblyFile="JsonPeek.dll" TaskName="JsonPeek"/>

  <Target Name="NoFileOrContent" Label="Error:JPE01">
    <JsonPeek Query="$.hello" />
  </Target>

  <Target Name="FileNotFound" Label="Error:JPE02">
    <JsonPeek ContentPath="Foo.json" Query="$.hello" />
  </Target>

  <Target Name="FileAndContent" Label="Error:JPE03">
    <JsonPeek Content="{ }" ContentPath="empty.json" Query="$.hello" />
  </Target>

  <Target Name="EmptyJson" Label="Warning:JPE04">
    <JsonPeek ContentPath="empty.json" Query="$.hello" />
  </Target>

  <Target Name="PeekSimpleValue">
    <PropertyGroup>
      <Json>
        {
          "hello": "world"
        }
      </Json>
      <Query>$.hello</Query>
      <Expected>world</Expected>
    </PropertyGroup>

    <JsonPeek Content="$(Json)" Query="$(Query)">
      <Output TaskParameter="Result" PropertyName="Actual" />
    </JsonPeek>
    
    <Error Condition="'$(Expected)' != '$(Actual)'" Text="Expected $(Expected) but was $(Actual)" />
  </Target>

  <Target Name="PeekEmptyValue">
    <PropertyGroup>
      <Json>
        {
          "hello": ""
        }
      </Json>
      <Query>$.hello</Query>
      <Expected></Expected>
    </PropertyGroup>

    <JsonPeek Content="$(Json)" Query="$(Query)">
      <Output TaskParameter="Result" PropertyName="Actual" />
    </JsonPeek>

    <JsonPeek Content="$(Json)" Query="$(Query)">
      <Output TaskParameter="Result" ItemName="Actual" />
    </JsonPeek>

    <Error Condition="'$(Expected)' != '$(Actual)'" Text="Expected $(Expected) but was $(Actual)" />
    <Error Condition="@(Actual -> Count()) != 0" Text="Expected @(Actual) to be empty" />
  </Target>

  <Target Name="PeekEmptyNonDefaultValue">
    <PropertyGroup>
      <Json>
        {
        "hello": ""
        }
      </Json>
      <Query>$.hello</Query>
      <Expected>$empty</Expected>
    </PropertyGroup>

    <JsonPeek Content="$(Json)" Empty="$empty" Query="$(Query)">
      <Output TaskParameter="Result" PropertyName="Actual" />
    </JsonPeek>

    <JsonPeek Content="$(Json)" Empty="$empty" Query="$(Query)">
      <Output TaskParameter="Result" ItemName="Actual" />
    </JsonPeek>

    <Error Condition="'$(Expected)' != '$(Actual)'" Text="Expected $(Expected) but was $(Actual)" />
    <Error Condition="@(Actual -> Count()) != 1" Text="Expected @(Actual) to have one item" />
  </Target>

  <Target Name="PeekNotFoundNonDefaultValue">
    <PropertyGroup>
      <Json>
        {
        "hello": ""
        }
      </Json>
      <Query>$.foo</Query>
      <Expected></Expected>
    </PropertyGroup>

    <JsonPeek Content="$(Json)" Empty="$empty" Query="$(Query)">
      <Output TaskParameter="Result" PropertyName="Actual" />
    </JsonPeek>

    <Error Condition="'$(Expected)' != '$(Actual)'" Text="Expected $(Expected) but was $(Actual)" />
  </Target>

  <Target Name="PeekFileValues">
    <JsonPeek ContentPath="sample.json" Query="$.immutable">
      <Output TaskParameter="Result" PropertyName="Actual" />
    </JsonPeek>
    <Error Condition="'$(Actual)' != 'value'" Text="Expected 'value' but was $(Actual)" />
  </Target>

  <Target Name="PeekMultipleValues">
    <PropertyGroup>
      <Json>
        {
          "foo": [
            1, 
            2, 
            3
          ]
        }
      </Json>
      <Query>$.foo</Query>
      <Expected>1;2;3</Expected>
    </PropertyGroup>

    <JsonPeek Content="$(Json)" Query="$(Query)">
      <Output TaskParameter="Result" ItemName="Actual" />
    </JsonPeek>

    <PropertyGroup>
      <Actual>@(Actual)</Actual>
    </PropertyGroup>

    <Error Condition="'$(Expected)' != '$(Actual)'" Text="Expected $(Expected) but was $(Actual)" />
  </Target>

  <Target Name="PeekObjectAsItem">
    <PropertyGroup>
      <Json>
{
    "http": {
        "host": "localhost",
        "port": 80,
        "ssl": true
    }
}
      </Json>
    </PropertyGroup>

    <JsonPeek Content="$(Json)" Query="$.http">
      <Output TaskParameter="Result" ItemName="Http" />
    </JsonPeek>

    <PropertyGroup>
      <Host>@(Http -> '%(host)')</Host>
      <Port>@(Http -> '%(port)')</Port>
      <Ssl>@(Http -> '%(ssl)')</Ssl>
    </PropertyGroup>

    <Error Condition="'$(Host)' != 'localhost'" Text="Expected 'localhost' but was $(Host)" />
    <Error Condition="'$(Port)' != '80'" Text="Expected '80' but was $(Port)" />
    <Error Condition="'$(Ssl)' != 'true'" Text="Expected 'true' but was $(Ssl)" />
  </Target>

</Project>